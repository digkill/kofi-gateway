package main

import (
	_ "fmt"
	"log"
	"net/http"
	"os"

	"github.com/joho/godotenv"
	"kofi-gateway/grpc"
	"kofi-gateway/internal"
	"kofi-gateway/internal/db"
	"kofi-gateway/internal/handlers"
	"kofi-gateway/internal/logger"
)

func main() {
	// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env (–µ—Å–ª–∏ –µ—Å—Ç—å)
	if err := godotenv.Load(); err != nil {
		log.Println("‚ö†Ô∏è .env –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏")
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
	if err := db.Init(); err != nil {
		log.Fatalf("‚ùå DB error: %v", err)
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
	if err := logger.InitLogger(); err != nil {
		log.Printf("‚ö†Ô∏è Logger error: %v", err)
	}

	// –°—Ç–∞—Ä—Ç retry-–ø–æ—Ç–æ–∫–∞
	internal.StartGRPCRetryLoop()

	// gRPC-—Å–µ—Ä–≤–µ—Ä (–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ —Ñ–æ–Ω–µ)
	go grpc.StartGRPCServer()

	// HTTP-—ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
	http.HandleFunc("/webhook/kofi", handlers.KofiWebhookHandler)
	http.HandleFunc("/health", func(w http.ResponseWriter, r *http.Request) {
		w.WriteHeader(http.StatusOK)
		w.Write([]byte("ok"))
	})

	// –°—Ç–∞—Ä—Ç HTTP-—Å–µ—Ä–≤–µ—Ä–∞
	port := os.Getenv("HTTP_PORT")
	if port == "" {
		port = "8081"
	}
	log.Printf("üåê HTTP server running on :%s", port)
	log.Fatal(http.ListenAndServe(":"+port, nil))
}
